那么 daemons 目前有两种基本的模式，分别是 stand_alone 与 super daemon 两种方式，底下就来说一说这两种 daemon 的工作型态：

    *  stand_alone ： 就字面上的意思来说，stand alone 就是『独立的启动』的意思，也就是说，该 daemon 启动之后，
    	就直接常驻在内存当中啰！他虽然会一直的占用系统的资源，但最大的优点就是，他会一直启动的啦！所以当有要求来的时候，
    	他就会很快速的响应啰！常常用在这一种 daemon 的网络服务如常见的 httpd 这一个即是一例！ 

    * super daemon ： 相对于 stand alone 的执行方式，这一种服务的启动方式则是藉由统一的一个 daemon 来负责唤起该服务！
    	这一个统一负责的 daemon 就是 inet 这支服务啦！不过，在后来的 Linux 发展套件中，则是使用 xinet 这个设定啰！
    	我们这里以 Mandrake 的 xinet 来做说明。当有网络的服务要求来的时候，该要求会先送给 xinet 这个服务，
    	然后 xinet 根据该网络要求送来的数据封包的内容 ( 该内容会记录 IP 与 port ) 来将数据封包送给实际运作的服务！
    	而该服务这个时候才会启动的！最常见到的就是 ftp 这支网络服务啦！这种最大的优点就是当没有数据封包来的时候，
    	该服务不会一直占据系统资源 ( 该服务会在 sleeping 的状态吧！ ) ，但是相对的，他的反应时间也会比较慢，
    	因为还要花费一段时间去『唤醒』该服务呀！ 
    	
    	
    	    * 请特别注意！虽然有的时候您可以藉由修改 /etc/services 来更改一个服务的 port 号，不过并不建议如此做
    	    ，因为很有可能会造成一些协议的错误情况！这里特此说明一番呦！（除非您要架设一个地下网站，否则的话，
    	    使用 /etc/services 原先的设定就好啦！） 
    	    
 # Daemon 的命名规则：
每一个服务的开发者，当初在开发他们的服务时，都有特别的故事啦！不过，无论如何，这些服务的名称被建立之后，
被挂上 Linux 使用时，通常在服务的名称之后会加上一个 d ，例如例行性命令的建立的 at, 与 cron 这两个服务，
通常会被称为 atd 与 crond，这个 d 代表的就是 daemon 的意思。所以，在资源管理那一章中，我们使用了 ps 与 top 来观察程序时
，都会发现到很多的 xxxd 的程序，呵呵！通常那就是一些 daemon 的程序啰！   	    

* stand alone ： 这个放置在 /etc/rc.d/init.d/ 这个目录里面，几乎所有的 RPM 安装的套件之启动项目都在这里啦！ 

* super daemon ： 这个工作的那一支服务其实就是 xinet 或者是 inet 啦！请注意， xinet 也是一个 daemon 呢！
他是 stand alone 启动的，也就是他会一直在监听大家的需求，所以 xinet 的启动 scripts 写在 /etc/rc.d/init.d/xinetd 
这个 scripts 里面啰！但是挂在这个 daemon 里头的服务之设定项目呢？嗯！就是写在 /etc/xinetd.conf 与 /etc/xinetd.d/ 
这个目录里面的任何档案！ 


