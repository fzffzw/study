Cisco的以太网通道
两个交换机之间多加几个线

F5负载均衡图
	pc机
	 |
	 | src -207.17.117.20:4003i（VIP）
	 |
	 F5(216.34.94.17:80) (Big Ip translates Dest Address to Node based on Load Balancing)
	 |
    -------------
    |   |   |   |
    |   |   |   |
   (1) (2) (3) (4)

(1) 192.168.20.1:80
(2) 192.168.20.2:4002
(3) 192.168.20.3:80
(4) 192.168.20.4:8080
这就是nat技术（Network Address Translation）
把目的地址转换叫Dnat技术，如果把源地址转换交Snat技术

1）客户发出服务请求到VIP
2）BiGIp接收到请求，将数据包中的目的Ip地址改为选中的后台服务器IP地址，
然后将数据包发出到后台选定的服务器
3）后台服务器收到后，将应答包按照其路由发送到BIGIP
4）BIGIP收到应打包后将其中的源地址改回成VIP地址，发回客户端，
因此就完成了一个标准的服务器负载均衡的流程。

LVS模式
LVS常用的三种负载均衡模式
1）LVS nat模式 （网络地址转换）
virual Server via Network Address Translation(VS/NAT)
通过网络地址转换，调度器重写请求报文的目标地址，
根据预设的调度算法，将请求分配给后端的真是的服务器，真实服务器的响应
报文通过调度器时，报文的源地址被重写，在返回给客户，完成整个负载调度过程
(公网ip可以到私网，私网不能到公网)


#######nat 的配置##################
nat技术需要两块网卡，所以需要LVS添加两块网卡
假如左侧的网卡用 net 8.8.8.1，用vm1，另外的两个网卡用vm2，
另外的server也用vm2，保证他们在同一个网段里面

LVS配置
ifconfig eth0 8.8.8.8 netmask 255.255.255.0
ifconfig eth1 192.168.10.1 netmask 255.255.255.0
route add default gw 192.168.10.1

real server1
ifconfig eth0 192.168.10.2 netmask 255.255.255.0
route add default gw 192.168.10.1

real server2
ifconfig eth0 192.168.10.3 netmask 255.255.255.0
route add default gw 192.168.10.1 (配置网关，让数据能出去)

##查看路由表
route -n



检测防火墙
iptables -L -n

service iptables stop

检查se Linux

sestatus


LVS要安装ipvsadm软件
lvs server
echo "1" > /proc/sys/net/ipv4/ip_forward
echo 1>/proc/sys/net/ipv4/ip_forward （ip转发表，写1表示开启路由功能，表示这个lvs相当于一个路由器）
ipvsadm -C （清除以前的转换表）
ipvsadm -At 8.8.8.8:80 -s rr (A增加一个带调度算法的转换表)
ipvsadm -at 8.8.8.8:80 -r 192.168.10.2:80 -m （-m表示是以nat技术模式 -g dr模式 -i ip隧道）
ipvsadm -at 8.8.8.8:80 -r 192.168.10.3:80 -m

ip转发表，写1表示开启路由功能，表示这个lvs相当于一个路由器，
如果不开启lvs两块网卡之间不能通信，开启了才可以通信

网关，所有数据通道必须的关口。


###安装ipsadm
yum -y install ipvsadm*


2）LVS ip-tun模式 （ip隧道技术）
采用NAT技术是，由于请求和响应的报文和响应报文都必须经过调度器地址重写，
当用户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，
调度器把请求报文通过IP隧道转发至真实服务器，而真实服务器将
响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务
应答比请求报文大许多，采用VS/TUN技术后，集群系统的最大吞吐量可以提高10倍。

LVS ip-tun实验规划
directorserver 192.168.10.1
realserver 192.168.10.2
realserver 192.168.10.3
vip 192.168.10.10

	   vip:192.168.10.10
internet ----{LVS}--------------{交换机}----->service1...n
	   eth0 ip 192.168.10.1

pc机上有多个网卡（相当于路由器），路由器是互联不同网段的，所以每个pc的多个
网卡都必须在不同网段上

现在LVS有两个网卡在两个网段上 192.168.10.0(eth0) 192.168.10.10(vip tunl0)

####LVS ip-tun服务器脚本
原理图
			
10.4	-----------------	|----------	   10.2
 user	|Dorectory	|	|	  |--------{Rs1}(tun1--10.10)
--------|tunl0(10.10)	|	| switch  |   
	|     (10.1)eth1|-------|         |	   10.3
	------------------	|---------|---------{Rs2}(tun1--10.10)
####问题，调度器Lvs直接就将地址转发给Rs1、Rs2为什么还要在Rs1和Rs2（真实服务器隧道上面）上配置10.10？
假如在Rs1和Rs2上面不配置10.10，将会
user访问10.10的80端口，于是问交换机有没有10.10的mac地址，因为交换机只有一个10。10所以
数据就到达Directory的10.10这个计算机，这个计算机就会将这个数据改造转发到10.2的计算机
此时（三层 网络层{源ip 10.4|目的ip 10.2}，二层 数据链路层 {源mac 4 |目的mac 是1} 
（因为Lvs ip tun是虚拟网卡，是没有mac地址的，就是tunl0是没有mac地址的，用的是eth1的mac地址就是1） ），
Lvs转发到10.2（二层 数据链路层 {源mac 4| 目的mac 2}）
数据到达10.2这个计算机，这个计算机将数据通过交换机原路返回
（此时10.2会问交换机10.4是哪个端口、网络{源ip 10.2|目的ip 10.4}，二层 数据链路层 {源mac 2| 目的mac 4}）
此时交换机记录了 10.4和10.2的mac地址和端口
上面完成第一次请求结果，

user 在请求一次数据，{源ip 10.4|目的ip 10.2}，此时二层{源mac 4 |目的mac 2},所以访问永远不会将访问
转到10.3这台服务器上。因为数据永远不会到调度器上面了。（连续点击的时候就会出问题）

所以要想个办法，将user的访问的（{源ip 10.4|目的ip 10.10}）只有这样才会到调度器，调度器才会将数据
转发到10.3


ifconfig tunl0 192.168.10.10 netmask 255.255.255.255 up
route add -host 192.169.10.10 dev tunl0 (在路由表中加入，防止计算机误认为192.168.10.10的ip是在192.169.10.0的网段)
ipvsadm -C （清楚）
ipvsadm -A -t 192.168.10.10:80 -s rr （rr轮询模式，平均分配）
ipvsadm -a -t 192.168.10.10:80 -r 192.168.10.2 -i （访问10.10d的80端口转到10.2的服务器上）
ipvsadm -a -t 192.168.10.10:80 -r 192.168.10.3 -i （同上，转到10.3）
ipvsadm （调度痕迹）

######Lvs ip-tun 真实客户端脚本
ifconfig tun10 192.168.10.10 netmask 255.255.255.255 up
route add -host 192.168.10.10 dev tunl0
echo "1" > /proc/syc/net/ipv4/conf/tunl0/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/tun10/arp_announce
echo "1" > /proc/sys/net/ipv4/conf/all/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/all/arp_announce
（忽略10.10的arp，宣告10.2的arp，就是通过网线连接的网卡）



###例如网段如下

192.168.10.10
11000000 10101000 00001010 00001010
11111111 11111111 11111111 11111111
--------------------------------------
11000000 10101000 00001010 00001010
192.168.10.10 （网段）


ip1
2.2.2.1		Ip地址
255.255.255.0 	子网掩码

00000010 00000010 00000010 00000001
11111111 11111111 11111111 00000000
------------------------------------
00000010 00000010 00000010 0000000
2.2.2.0 （网段号）


iP2
2.2.2.2
255.255.255.0

00000010 00000010 00000010 00000010
11111111 11111111 11111111 00000000
------------------------------------
00000010 00000010 00000010 00000000
2.2.2.0 （网段号）


ip3
2.2.2.3
255.255.255.255

00000010 00000010 00000010 00000011
11111111 11111111 11111111 11111111
-------------------------------------
00000010 00000010 00000010 00000011

2.2.2.3 (网段号)

3）Lvs dr模式 （直接路由）
virual Server via Network Address Translation(VS/NAT)

###负载的常用轮叫算法
1)轮叫 不管服务器性能平均吧请求分配集群的真实服务器
2）加权轮叫 （weighted Round Robin）
调度器根据真实服务器不同处理能力调度访问请求，
3)最小链接 （Least Connections）
调度器通过最小链接算法动态地将网络请求调度到已建立
的链接数最小的服务器上。
4）加权最小链接（Weighted Least Connections）

